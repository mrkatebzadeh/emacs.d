* evil
#+BEGIN_SRC emacs-lisp
(use-package evil
  :ensure t
  :init
  (setq evil-want-integration nil) 
  :config
  (progn 
  (evil-mode 1)))
#+END_SRC
* evil-collection
#+BEGIN_SRC emacs-lisp
(use-package evil-collection
  :after evil
  :ensure t
  :config
  (progn
  (evil-collection-init)))
#+END_SRC
* evil-magit
#+BEGIN_SRC emacs-lisp
(use-package evil-magit
  :ensure t
  :config
  (progn
  (evil-define-key evil-magit-state magit-mode-map "?" 'evil-search-backward)))
#+END_SRC
* hydra
#+BEGIN_SRC emacs-lisp
(use-package hydra
  :ensure t
)
#+END_SRC
* evil leader key
#+BEGIN_SRC emacs-lisp
(use-package general
  :ensure t
  :config
  (setq general-override-states '(insert
                                  emacs
                                  hybrid
                                  normal
                                  visual
                                  motion
                                  operator
                                  replace))
  (general-override-mode))
  
#+END_SRC
* leader file
#+BEGIN_SRC emacs-lisp
(general-define-key
   :prefix "SPC f"
   :states '(normal visual motion)
   :keymaps 'override
   "f" 'counsel-find-file
   "x" 'counsel-M-x
   "s" 'swiper
   "t" 'neotree-toggle
   "I" 'rtags-imenu
   "i" 'imenu
   )
#+END_SRC
* leader modes
#+BEGIN_SRC emacs-lisp
(general-define-key
   :prefix "SPC m"
   :states '(normal visual motion)
   :keymaps 'override
   "m" 'mu4e
   "g" 'magit-status
   "o" 'org-mode
   "t" 'twit
   "r" 'md4rd
   )
#+END_SRC
* leader buffer
#+BEGIN_SRC emacs-lisp
(general-define-key
   :prefix "SPC b"
   :states '(normal visual motion)
   :keymaps 'override
   "b" 'ibuffer
   "d" 'kill-current-buffer
   "D" 'kill-buffer
   )
#+END_SRC
* leader window
#+BEGIN_SRC emacs-lisp
(general-define-key
   :prefix "SPC w"
   :states '(normal visual motion)
   :keymaps 'override
   "v" 'evil-window-vsplit
   "s" 'evil-window-split
   "d" 'evil-window-delete
   "h" 'evil-window-left
   "j" 'evil-window-down
   "k" 'evil-window-up
   "l" 'evil-window-right
   "t" 'toggle-transparency
   )
#+END_SRC
* leader shell
#+BEGIN_SRC emacs-lisp
(general-define-key
   :prefix "SPC s"
   :states '(normal visual motion)
   :keymaps 'override
   "u" 'update-ticket
   "s" 'scp-project
   "w" 'wttrin
   "W" 'wttrin-exit
   )
#+END_SRC

* leader goto 
#+BEGIN_SRC emacs-lisp
(general-define-key
   :prefix "SPC g"
   :states '(normal visual motion)
   :keymaps 'override
   "c" 'avy-goto-char
   )
#+END_SRC

* leader config files 
#+BEGIN_SRC emacs-lisp
(defun configs-visit ()
(interactive)
(find-file "~/.emacs.d/configs"))
(general-define-key
   :prefix "SPC C"
   :states '(normal visual motion)
   :keymaps 'override
   "C" 'configs-visit 
   )
#+END_SRC

* information
#+BEGIN_SRC emacs-lisp
(general-define-key
   :prefix "SPC i"
   :states '(normal visual motion)
   :keymaps 'override
   "g" 'google-this
   "G" 'google-this-search
   "m" 'man
   )
#+END_SRC
