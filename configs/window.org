* Shift navigation
#+BEGIN_SRC emacs-lisp
  (windmove-default-keybindings)
#+END_SRC
* ace-window
#+BEGIN_SRC emacs-lisp
(use-package ace-window
  :ensure t
  :init
  (progn
    (global-set-key [remap other-window] 'ace-window)
    ))
#+END_SRC
* winner-mode
#+BEGIN_SRC emacs-lisp
(winner-mode 1)
#+END_SRC
* all-the-icons
#+BEGIN_SRC emacs-lisp
(use-package all-the-icons
  :ensure t)
#+END_SRC
* imenu
#+BEGIN_SRC emacs-lisp
(use-package imenu
  :ensure t
  )
#+END_SRC
* imenu-list
#+BEGIN_SRC emacs-lisp
(use-package imenu-list
    :ensure t
    :init
    (progn
      (setq imenu-list-focus-after-activation t
            imenu-list-auto-resize t)
    :config
    (global-set-key (kbd "C-c i") #'imenu-list-smart-toggle)))
#+END_SRC
* neo-tree
#+BEGIN_SRC emacs-lisp
(use-package neotree
  :ensure t
  :config
  (progn
  (setq projectile-switch-project-action 'neotree-projectile-action)
  (setq neo-smart-open t)
  (global-set-key (kbd "C-c f t") 'neotree-toggle)
  (setq neo-theme (if (display-graphic-p) 'icons 'arrow))
  ))
#+END_SRC
* zoom
#+BEGIN_SRC emacs-lisp
;(use-package zoom
;  :ensure t
;  :init
;  (zoom-mode t)
;  (custom-set-variables
;   '(zoom-size '(0.618 . 0.618))
;   )
;)
#+END_SRC
